[versions]
version-major-code = "1"
version-name = "1.0.0"
kotlin = "2.1.21"
compose = "1.8.0"
agp = "8.10.0"
androidx-activityCompose = "1.10.1"
androidx-uiTest = "1.8.2"
hotReload = "1.0.0-alpha10"
kermit = "2.0.4"
kotlinx-coroutines = "1.10.2"
ktorfit = "2.5.2"
androidx-lifecycle = "2.9.0-beta01"
androidx-navigation = "2.9.0-beta01"
kotlinx-serialization = "1.8.1"
kotlinInject = "0.8.0"
ksp = "2.1.21-2.0.1"
coil = "3.2.0"
kotlinx-datetime = "0.6.2"
kstore = "0.9.1"
kmp-settings = "1.3.0"
buildConfig = "5.6.5"
jgit = "1.1"
materialKolor = "2.1.1"
dnd = "0.3.0"
calf = "0.7.1"

[libraries]

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-uitest-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-uitest-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }
kotlinInject = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }
kotlinInjectKsp = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }
coil = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
kstore-storage = { module = "io.github.xxfast:kstore-storage", version.ref = "kstore" }
kmp-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "kmp-settings" }
materialKolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
dnd = { module = "com.mohamedrejeb.dnd:compose-dnd", version.ref = "dnd" }
calf-ui = { module = "com.mohamedrejeb.calf:calf-ui", version.ref = "calf" }
calf-webview = { module = "com.mohamedrejeb.calf:calf-webview", version.ref = "calf" }
calf-file-picker = { module = "com.mohamedrejeb.calf:calf-file-picker", version.ref = "calf" }
calf-permissions = { module = "com.mohamedrejeb.calf:calf-permissions", version.ref = "calf" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
hotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "hotReload" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
jgit = { id = "org.lsposed.lsplugin.jgit", version.ref = "jgit" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
